// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnboardingWeatherAPI.Models.Shared;

#nullable disable

namespace OnboardingWeatherAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220413125041_add-forecaster-and-cityForecaster")]
    partial class addforecasterandcityForecaster
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("OnboardingWeatherAPI.Models.City", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("OnboardingWeatherAPI.Models.Forecaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Forecasters");
                });

            modelBuilder.Entity("OnboardingWeatherDOMAIN.Models.CityForecaster", b =>
                {
                    b.Property<long>("CityId")
                        .HasColumnType("bigint");

                    b.Property<long>("ForecasterId")
                        .HasColumnType("bigint");

                    b.Property<string>("AcceessItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CityId", "ForecasterId");

                    b.HasIndex("ForecasterId");

                    b.ToTable("CityForecaster");
                });

            modelBuilder.Entity("OnboardingWeatherDOMAIN.Models.CityForecaster", b =>
                {
                    b.HasOne("OnboardingWeatherAPI.Models.City", "City")
                        .WithMany("CityForecasters")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnboardingWeatherAPI.Models.Forecaster", "Forecaster")
                        .WithMany("CityForecasters")
                        .HasForeignKey("ForecasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Forecaster");
                });

            modelBuilder.Entity("OnboardingWeatherAPI.Models.City", b =>
                {
                    b.Navigation("CityForecasters");
                });

            modelBuilder.Entity("OnboardingWeatherAPI.Models.Forecaster", b =>
                {
                    b.Navigation("CityForecasters");
                });
#pragma warning restore 612, 618
        }
    }
}
